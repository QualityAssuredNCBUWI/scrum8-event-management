---
swagger: "2.0"
info:
  description: This YAML doc depicts the various endpoints to a RESTapi for a Event management system
  version: 1.0.0
  title: Event Management System
  termsOfService: http://swagger.io/terms/
  contact:
    email: apiteam@swagger.io
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
host: duroad.swagger.io
basePath: /v2
tags:
- name: events
  description: Operations about events
  externalDocs:
    description: Find out more
    url: http://swagger.io
- name: users
  description: Operations about user
  externalDocs:
    description: Find out more about our store
    url: http://swagger.io
- name: auth
  description: Operations about authentication
- name: groups
  description: Operations about groups
schemes:
- https
- http
paths:
  /api/events:
    get:
      tags:
      - events
      summary: Get the first 10 events
      description: Get the first 10 events and filter by either date or title if present in query.
      operationId: getevents
      produces:
      - application/xml
      - application/json
      parameters:
      - name: start
        in: query
        description: The start of the date range of the events to filter
        required: false
        type: string
      - name: end
        in: query
        description: The end of the date ranges of the events to filter
        required: false
        type: string
      - name: title
        in: query
        description: The title of the event being filtered
        required: false
        type: string
      responses:
        "200":
          description: successful operation
          schema:
            xml:
              name: Events
            type: array
            items:
              $ref: '#/definitions/Events'
            minItems: 2
        "400":
          description: Invalid ID supplied
          schema:
            $ref: '#/definitions/ApiResponse'
        "404":
          description: No events Found
          schema:
            $ref: '#/definitions/ApiResponse'
      security:
      - api_key: []
    post:
      tags:
      - events
      summary: Add a new event
      description: ""
      operationId: addEvent
      consumes:
      - application/json
      - application/xml
      produces:
      - application/xml
      - application/json
      parameters:
      - in: body
        name: body
        description: Parameters needed for the creation of a new Event object
        required: true
        schema:
          $ref: '#/definitions/Events'
      responses:
        "405":
          description: Invalid input
        "201":
          description: Created
      security:
      - JWT_Token: []
  /api/groups/{groupId},{email}:
    post:
      tags:
      - groups
      summary: Add User to group
      description: Adds a specified user to an existing group
      operationId: addMember
      produces:
      - application/xml
      - application/json
      parameters:
      - name: groupId
        in: path
        description: ID of group the admin is in
        required: true
        type: integer
        format: int64
      - name: email
        in: path
        description: Email of the user to be added to the event organizing group
        required: true
        type: string
      responses:
        "201":
          description: Member successfully added to group
          schema:
            $ref: '#/definitions/Affiliation'
        "400":
          description: User email doesnt exist or user not logged into active session
          schema:
            $ref: '#/definitions/ApiResponse'
      security:
      - api_key: []
  /api/groups:
    post:
      tags:
      - groups
      summary: Create a group
      description: Creates a group for an event if the group doesnt exist
      operationId: createGroup
      produces:
      - application/xml
      - application/json
      parameters:
      - name: name
        in: formData
        description: Name of the group
        required: true
        type: string
      responses:
        "201":
          description: Group Successfully created
          schema:
            $ref: '#/definitions/Groups'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/ApiResponse'
        "409":
          description: Conflict in Affiliate Table, mapping may already exist
          schema:
            $ref: '#/definitions/ApiResponse'
      security:
      - api_key: []
  /api/events/groups/{groupId}/pending:
    get:
      tags:
      - events
      summary: Get all pending events within group
      description: Returns list of pending events
      operationId: getAllPending
      produces:
      - application/xml
      - application/json
      parameters:
      - name: groupId
        in: path
        description: ID group to retieve pending events for
        required: true
        type: integer
        format: int64
      responses:
        "200":
          description: successful operation
          schema:
            $ref: '#/definitions/Events-Pending'
        "401":
          description: You are not an Admin!
          schema:
            $ref: '#/definitions/ApiResponse'
      security:
      - api_key: []
  /api/events/{eventId}:
    get:
      tags:
      - events
      summary: Find event by ID
      description: Returns a single event
      operationId: geteventById
      produces:
      - application/xml
      - application/json
      parameters:
      - name: eventId
        in: path
        description: ID of event to return
        required: true
        type: integer
        format: int64
      responses:
        "200":
          description: successful operation
          schema:
            $ref: '#/definitions/Events'
        "400":
          description: Invalid ID supplied
          schema:
            $ref: '#/definitions/ApiResponse'
        "404":
          description: Event not found
          schema:
            $ref: '#/definitions/ApiResponse'
      security:
      - api_key: []
    put:
      tags:
      - events
      summary: Edit event by ID
      description: make and edit to a single Event based on ID number
      parameters:
      - name: eventId
        in: path
        required: true
        type: integer
      responses:
        "200":
          description: successful operation
          schema:
            $ref: '#/definitions/Events'
        "400":
          description: Invalid ID supplied
          schema:
            $ref: '#/definitions/ApiResponse'
        "404":
          description: Event not found
          schema:
            $ref: '#/definitions/ApiResponse'
      security:
      - JWT_Token: []
    delete:
      tags:
      - events
      summary: Delete event
      description: Delete event by Id
      operationId: removeEvent
      parameters:
      - name: eventId
        in: path
        required: true
        type: integer
        format: int64
      responses:
        "200":
          description: successful operation
          schema:
            $ref: '#/definitions/Events'
        "400":
          description: Invalid ID supplied
          schema:
            $ref: '#/definitions/ApiResponse'
        "404":
          description: Event not found
          schema:
            $ref: '#/definitions/ApiResponse'
      security:
      - JWT_Token: []
  /api/register:
    post:
      tags:
      - auth
      summary: Create user
      description: This can only be done by the logged in user.
      operationId: createUser
      produces:
      - application/xml
      - application/json
      parameters:
      - in: body
        name: body
        description: Created user object
        required: true
        schema:
          $ref: '#/definitions/UserRegistration'
      responses:
        "201":
          description: Account created
          schema:
            $ref: '#/definitions/UserRegistration'
  /api/users/{user_id}:
    get:
      tags:
      - users
      summary: Retrieves user by ID
      description: allows a user to view their profile information
      operationId: getUser
      produces:
      - application/json
      parameters:
      - name: user_id
        in: path
        description: attribute of user object
        required: true
        type: integer
        format: int64
      responses:
        "200":
          description: successful operation
          schema:
            $ref: '#/definitions/Users'
        "404":
          description: User not found
      security:
      - api_key: []
  /api/users/current:
    get:
      tags:
      - users
      summary: Retrieves current user
      description: allows a user to view their profile information
      operationId: getUser
      produces:
      - application/json
      parameters: []
      responses:
        "200":
          description: successful operation
          schema:
            $ref: '#/definitions/Users'
        "404":
          description: User not found
      security:
      - api_key: []
    put:
      tags:
      - users
      summary: 'Update user profile '
      description: allows a user to update their profile
      operationId: updateUser
      produces:
      - application/json
      parameters: []
      responses:
        "200":
          description: successful operation
          schema:
            $ref: '#/definitions/Users'
        "400":
          description: Invalid user ID supplied
      security:
      - api_key: []
  /api/auth/login:
    post:
      tags:
      - auth
      summary: Logs user into the system
      description: ""
      operationId: loginUser
      produces:
      - application/xml
      - application/json
      parameters:
      - name: email
        in: query
        description: The email for login
        required: true
        type: string
      - name: password
        in: query
        description: The password for login in clear text
        required: true
        type: string
      responses:
        "200":
          description: successful operation
          schema:
            $ref: '#/definitions/LoginResponse'
        "401":
          description: Access Token missing or invalid
  /api/auth/logout:
    post:
      tags:
      - auth
      summary: Logs out current logged in user session
      description: ""
      operationId: logoutUser
      produces:
      - application/xml
      - application/json
      parameters: []
      responses:
        default:
          description: successful operation
      security:
      - JWT_Token: []
securityDefinitions:
  JWT_Token:
    type: apiKey
    name: JWT_token
    in: header
  api_key:
    type: apiKey
    name: api_key
    in: header
definitions:
  Events:
    type: object
    properties:
      id:
        type: integer
        format: int64
      title:
        type: string
        example: The Party
      created_at:
        type: string
        format: date
      start_date:
        type: string
        format: date
      end_date:
        type: string
        format: date
      description:
        type: string
        example: The hottest party of the year, since Covid-19
      venue:
        type: string
        example: 21 Kingston Road, Bog Walk, St. Catherine, Jamaica
      image:
        type: string
        format: url
        example: flyer.jpg
      website_url:
        type: string
        format: URL
        example: https://theparty.com
      status:
        type: string
        description: The status of event
        enum:
        - pending
        - published
      uid:
        type: integer
        format: int64
        description: user id of user who created the event
    xml:
      name: Order
  Users:
    type: object
    properties:
      id:
        type: integer
        format: int64
      first_name:
        type: string
      last_name:
        type: string
      email:
        type: string
        format: email
      profile_photo:
        type: string
        format: url
      created_at:
        type: string
        format: date
    xml:
      name: Users
  Events-Pending:
    type: object
    properties:
      id:
        type: integer
        format: int64
      title:
        type: string
        example: The Party
      created_at:
        type: string
        format: date
      start_date:
        type: string
        format: date
      end_date:
        type: string
        format: date
      description:
        type: string
        example: The hottest party of the year, since Covid-19
      venue:
        type: string
        example: 21 Kingston Road, Bog Walk, St. Catherine, Jamaica
      image:
        type: string
        format: url
        example: flyer.jpg
      website_url:
        type: string
        format: URL
        example: https://theparty.com
      status:
        type: string
        description: The status of event
        enum:
        - pending
        - published
      uid:
        type: integer
        format: int64
        description: user id of user who created the event
    xml:
      name: Events-Pending
  Affiliation:
    type: object
    properties:
      userId:
        type: integer
        format: integer
      groupId:
        type: integer
        format: integer
  Groups:
    type: object
    properties:
      id:
        type: integer
        format: integer
      name:
        type: string
        format: string
      admin:
        type: integer
        format: integer
  UserRegistration:
    type: object
    properties:
      id:
        type: integer
        format: int64
      first_name:
        type: string
      last_name:
        type: string
      email:
        type: string
        format: email
      password:
        type: string
        format: password
      profile_photo:
        type: string
        format: url
      created_at:
        type: string
        format: date
    xml:
      name: Users
  ApiResponse:
    type: object
    properties:
      code:
        type: integer
        format: int32
      message:
        type: string
  LoginResponse:
    type: object
    properties:
      message:
        type: string
        example: Login Successful
      token:
        type: string
        example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c
externalDocs:
  description: Find out more about Swagger
  url: http://swagger.io
